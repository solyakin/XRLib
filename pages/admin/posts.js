import React from 'react'
import Head from 'next/head';
import {
    Table,
    Thead,
    Tbody, Tr, Th, Td, TableContainer,
    Container,
    Box,
    Text,
    HStack,
    Button,
    Image,
    Tag,
    RadioGroup, Radio,
    Input, FormControl, FormLabel, Heading,
    Tabs, TabList, TabPanels, Tab, TabPanel,
    Menu, MenuButton, MenuList, MenuItem,
    useDisclosure, Modal, ModalOverlay, ModalBody, ModalContent, Stack, Textarea, useToast, Center, Spinner
} from '@chakra-ui/react'
import useAuth from '../../components/authentication/hooks/useAuth'
import { useQuery } from '@tanstack/react-query'
import PostsService from '../../services/posts/posts.service'
import Header from '../../components/Header';
import styles from '../../styles/accounts.module.css';
import timestampToDate from '../../utils/timestamp-to-date';
import EditorGuard from '../../components/authentication/guards/EditorGuard';

const AdminPosts = () => {
    const { userData } = useAuth();
    const toast = useToast();
    const { isOpen, onOpen, onClose } = useDisclosure();
    const [value, setValue] = React.useState('1')
    const { isLoading: allPostsLoading, data: allPosts } = useQuery({
        queryKey: ['all-posts'], queryFn: async () => {
            return await PostsService.getAllPosts();
        }, onSuccess: (data) => {
            console.log(data)
        },
        onError: (error) => {
            toast({
                title: "Error",
                description: "Error fetching posts. Please refresh the page",
                status: "error",
                duration: 9000,
                isClosable: true,
            })
        },
    }
    )
    const { isLoading: allUnpublishedPostsLoading, data: allUnpublishedPosts } = useQuery({
        queryKey: ['all-unpublished-posts'], queryFn: async () => {
            return await PostsService.getAllUnpublishedPosts()
        }, onSuccess: (data) => {
            console.log(data)
        },
        onError: (error) => {
            toast({
                title: "Error",
                description: "Error fetching posts. Please refresh the page",
                status: "error",
                duration: 9000,
                isClosable: true,
            })
        },
    },
    )
    const { isLoading: allPublishedPostsLoading, data: allPublishedPosts } = useQuery({
        queryKey: ['all-published-posts'], queryFn: async () => {
            return await PostsService.getAllPublishedPosts()
        }, onSuccess: (data) => {
            console.log(data)
        },
        onError: (error) => {
            toast({
                title: "Error",
                description: "Error fetching posts. Please refresh the page",
                status: "error",
                duration: 9000,
                isClosable: true,
            })
        },
    },
    )

    return (
        <EditorGuard>
            <div className={styles.accounts}>
                <Head>
                    <title>XRAtlas</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/xr.jpeg" />
                    <link rel="preconnect" href="https://fonts.googleapis.com" />
                    <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin='true' />
                </Head>
                <main>
                    <Header />
                    <Container maxW={"1200px"} pt="2em">
                        <HStack justifyContent="space-between">
                            <Text as="h1" fontSize="4xl">POSTS</Text>
                            <Button
                                onClick={onOpen}
                                bg="transparent"
                                background={"#F40580"}
                                borderRadius="full"
                                color="white"
                                _hover={{
                                    border: "1px",
                                    borderColor: "white"
                                }}
                            >
                                <Image src='/sign.svg' width="12px" alt='' mr="10px" />
                                <Text fontSize="xs">New</Text>
                            </Button>
                        </HStack>
                        <Box>
                            <Tabs colorScheme={"pink"}>
                                <TabList>
                                    <Tab>
                                        All
                                        <Tag ml={"2"} size="sm" borderRadius="full" background={"#F40580"} color="whiteAlpha.900">{allPosts?.length || 0}</Tag>
                                    </Tab>
                                    <Tab>
                                        Published
                                        <Tag ml={"2"} size="sm" borderRadius="full" background={"#F40580"} color="whiteAlpha.900">{allPublishedPosts?.length || 0}</Tag>
                                    </Tab>
                                    <Tab>
                                        Unpublished
                                        <Tag ml={"2"} size="sm" borderRadius="full" background={"#F40580"} color="whiteAlpha.900">{allUnpublishedPosts?.length || 0}</Tag>
                                    </Tab>
                                </TabList>
                                <TabPanels>
                                    <TabPanel>
                                        <TableContainer mt="2rem" color="whiteAlpha.900">
                                            <Table variant='unstyled'>
                                                <Thead>
                                                    <Tr background="#333333" color="whiteAlpha.700">
                                                        <Th>Title</Th>
                                                        <Th>Author</Th>
                                                        <Th>Publish Date</Th>
                                                        <Th>Status</Th>
                                                        <Th isNumeric></Th>
                                                    </Tr>
                                                </Thead>
                                                <Tbody borderBottom={"1px"} borderColor={" rgba(251, 4, 123, 0.5)"}>
                                                    {
                                                        allPostsLoading && (
                                                            <Center>
                                                                <Spinner />
                                                            </Center>
                                                        )
                                                    }
                                                    {
                                                        allPosts && allPosts.map((post, index) => {
                                                            return (
                                                                <Tr borderBottom={"1px"} borderColor={" rgba(251, 4, 123, 0.5)"} key={index}>
                                                                    <Td>{post.title}</Td>
                                                                    <Td>{post.author.displayName}</Td>
                                                                    {post.isPublished && <Td fontSize="sm" color="#BDBDBD">Published <br></br> <Text as="span">{timestampToDate(post.publishedAt, true) || timestampToDate(post.lastUpdated, true) || timestampToDate(post.createdAt, true)}</Text></Td>}
                                                                    {!post.isPublished && <Td fontSize="sm" color="#BDBDBD">N/A</Td>}
                                                                    <Td>
                                                                        {post.isPublished && <Tag background={"#27AE60"} color="whiteAlpha.900">Published</Tag>}
                                                                        {!post.isPublished && <Tag background={"#4F4F4F"} color="whiteAlpha.900">Unpublished</Tag>}

                                                                    </Td>
                                                                    <Td display={"flex"} justifyContent="flex-end">
                                                                        <Menu isLazy>
                                                                            <MenuButton>
                                                                                <Image src="/Vector (23).svg" width="13px" walt="" />
                                                                            </MenuButton>
                                                                            <MenuList background="black" borderColor="#1B1919" minW={"40px"} py="5">
                                                                                <MenuItem
                                                                                    mb="3"
                                                                                    background="#000000"
                                                                                    _hover={{ background: "white", color: "black" }}
                                                                                    fontSize={"sm"}
                                                                                >
                                                                                    Edit
                                                                                </MenuItem>
                                                                                <MenuItem
                                                                                    mb="3"
                                                                                    background="#000000"
                                                                                    _hover={{ background: "white", color: "black" }}
                                                                                    fontSize={"sm"}
                                                                                >
                                                                                    View
                                                                                </MenuItem>
                                                                                {
                                                                                    post.isPublished &&
                                                                                    <MenuItem
                                                                                        background="#000000"
                                                                                        _hover={{ background: "white", color: "black" }}
                                                                                        fontSize={"sm"}
                                                                                    >
                                                                                        Unpublish
                                                                                    </MenuItem>
                                                                                }
                                                                                {
                                                                                    !post.isPublished &&
                                                                                    <MenuItem
                                                                                        background="#000000"
                                                                                        _hover={{ background: "white", color: "black" }}
                                                                                        fontSize={"sm"}
                                                                                    >
                                                                                        Publish
                                                                                    </MenuItem>
                                                                                }
                                                                            </MenuList>
                                                                        </Menu>
                                                                    </Td>
                                                                </Tr>
                                                            )
                                                        })
                                                    }
                                                </Tbody>
                                            </Table>
                                        </TableContainer>
                                    </TabPanel>
                                    <TabPanel>
                                        <TableContainer mt="2rem" color="whiteAlpha.900">
                                            <Table variant='unstyled'>
                                                <Thead>
                                                    <Tr background="#333333" color="whiteAlpha.700">
                                                        <Th>Title</Th>
                                                        <Th>Author</Th>
                                                        <Th>Publish Date</Th>
                                                        <Th>Status</Th>
                                                        <Th isNumeric></Th>
                                                    </Tr>
                                                </Thead>
                                                <Tbody borderBottom={"1px"} borderColor={" rgba(251, 4, 123, 0.5)"}>
                                                    {
                                                        allPublishedPostsLoading && (
                                                            <Center>
                                                                <Spinner />
                                                            </Center>
                                                        )
                                                    }
                                                    {
                                                        allPublishedPosts && allPublishedPosts.map((post, index) => {
                                                            return (
                                                                <Tr borderBottom={"1px"} borderColor={" rgba(251, 4, 123, 0.5)"} key={index}>
                                                                    <Td>{post.title}</Td>
                                                                    <Td>{post.author.displayName}</Td>
                                                                    {post.isPublished && <Td fontSize="sm" color="#BDBDBD">Published <br></br> <Text as="span">{timestampToDate(post.publishedAt, true) || timestampToDate(post.lastUpdated, true) || timestampToDate(post.createdAt, true)}</Text></Td>}
                                                                    {!post.isPublished && <Td fontSize="sm" color="#BDBDBD">N/A</Td>}
                                                                    <Td>
                                                                        {post.isPublished && <Tag background={"#27AE60"} color="whiteAlpha.900">Published</Tag>}
                                                                        {!post.isPublished && <Tag background={"#4F4F4F"} color="whiteAlpha.900">Unpublished</Tag>}

                                                                    </Td>
                                                                    <Td display={"flex"} justifyContent="flex-end">
                                                                        <Menu isLazy>
                                                                            <MenuButton>
                                                                                <Image src="/Vector (23).svg" width="13px" walt="" />
                                                                            </MenuButton>
                                                                            <MenuList background="black" borderColor="#1B1919" minW={"40px"} py="5">
                                                                                <MenuItem
                                                                                    mb="3"
                                                                                    background="#000000"
                                                                                    _hover={{ background: "white", color: "black" }}
                                                                                    fontSize={"sm"}
                                                                                >
                                                                                    Edit
                                                                                </MenuItem>
                                                                                <MenuItem
                                                                                    mb="3"
                                                                                    background="#000000"
                                                                                    _hover={{ background: "white", color: "black" }}
                                                                                    fontSize={"sm"}
                                                                                >
                                                                                    View
                                                                                </MenuItem>
                                                                                <MenuItem
                                                                                    background="#000000"
                                                                                    _hover={{ background: "white", color: "black" }}
                                                                                    fontSize={"sm"}
                                                                                >
                                                                                    Unpublish
                                                                                </MenuItem>
                                                                            </MenuList>
                                                                        </Menu>
                                                                    </Td>
                                                                </Tr>
                                                            )
                                                        })
                                                    }
                                                </Tbody>
                                            </Table>
                                        </TableContainer>
                                    </TabPanel>
                                    <TabPanel>
                                        <TableContainer mt="2rem" color="whiteAlpha.900">
                                            <Table variant='unstyled'>
                                                <Thead>
                                                    <Tr background="#333333" color="whiteAlpha.700">
                                                        <Th>Title</Th>
                                                        <Th>Author</Th>
                                                        <Th>Publish Date</Th>
                                                        <Th>Status</Th>
                                                        <Th isNumeric></Th>
                                                    </Tr>
                                                </Thead>
                                                <Tbody borderBottom={"1px"} borderColor={" rgba(251, 4, 123, 0.5)"}>
                                                    {
                                                        allUnpublishedPostsLoading && (
                                                            <Center>
                                                                <Spinner />
                                                            </Center>
                                                        )
                                                    }
                                                    {
                                                        allUnpublishedPosts && allUnpublishedPosts.map((post, index) => {
                                                            return (
                                                                <Tr borderBottom={"1px"} borderColor={" rgba(251, 4, 123, 0.5)"} key={index}>
                                                                    <Td>{post.title}</Td>
                                                                    <Td>{post.author.displayName}</Td>
                                                                    {post.isPublished && <Td fontSize="sm" color="#BDBDBD">Published <br></br> <Text as="span">{timestampToDate(post.publishedAt, true) || timestampToDate(post.lastUpdated, true) || timestampToDate(post.createdAt, true)}r</Text></Td>}
                                                                    {!post.isPublished && <Td fontSize="sm" color="#BDBDBD">N/A</Td>}
                                                                    <Td>
                                                                        {post.isPublished && <Tag background={"#27AE60"} color="whiteAlpha.900">Published</Tag>}
                                                                        {!post.isPublished && <Tag background={"#4F4F4F"} color="whiteAlpha.900">Unpublished</Tag>}

                                                                    </Td>
                                                                    <Td display={"flex"} justifyContent="flex-end">
                                                                        <Menu isLazy>
                                                                            <MenuButton>
                                                                                <Image src="/Vector (23).svg" width="13px" walt="" />
                                                                            </MenuButton>
                                                                            <MenuList background="black" borderColor="#1B1919" minW={"40px"} py="5">
                                                                                <MenuItem
                                                                                    mb="3"
                                                                                    background="#000000"
                                                                                    _hover={{ background: "white", color: "black" }}
                                                                                    fontSize={"sm"}
                                                                                >
                                                                                    Edit
                                                                                </MenuItem>
                                                                                <MenuItem
                                                                                    mb="3"
                                                                                    background="#000000"
                                                                                    _hover={{ background: "white", color: "black" }}
                                                                                    fontSize={"sm"}
                                                                                >
                                                                                    View
                                                                                </MenuItem>
                                                                                <MenuItem
                                                                                    background="#000000"
                                                                                    _hover={{ background: "white", color: "black" }}
                                                                                    fontSize={"sm"}
                                                                                >
                                                                                    Unpublish
                                                                                </MenuItem>
                                                                            </MenuList>
                                                                        </Menu>
                                                                    </Td>
                                                                </Tr>
                                                            )
                                                        })
                                                    }
                                                </Tbody>
                                            </Table>
                                        </TableContainer>
                                    </TabPanel>
                                </TabPanels>
                            </Tabs>
                        </Box>
                    </Container>

                    <Modal onClose={onClose} isOpen={isOpen} isCentered>
                        <ModalOverlay background={"rgba(26, 32, 44, 0.7)"} />
                        <ModalContent bg="#000005" borderRadius="md" boxShadow={"dark-lg"} borderColor="white" border="1px">
                            <ModalBody mb="8" mt="9" marginLeft="6" marginRight="6">
                                <Heading as="h3" mb="3" textAlign="center" size="md" color="white">Add New User</Heading>
                                <FormControl isRequired mb="5">
                                    <FormLabel color="whiteAlpha.700">Email</FormLabel>
                                    <Input type="email" placeholder='username@gmail.com' borderRadius="md" borderColor="whiteAlpha.400" fontSize="small" color="white" boder="1px" outline="none" />
                                </FormControl>
                                <RadioGroup onChange={setValue} value={value} color="white" fontSize={"sm"}>
                                    <Stack direction='column'>
                                        <Text color="whiteAlpha.700">Role</Text>
                                        <Radio value='Administrator' borderColor={"pink"} size={"sm"} mb="3" colorScheme="pink" alignItems={"baseline"}>
                                            Administrator
                                            <Text color="#828282" fontSize="12px">Super control; Invite new people, modify site settings etc.</Text>
                                        </Radio>
                                        <Radio value='Editor' borderColor={"pink"} size={"sm"} mb="3" colorScheme="pink" alignItems={"baseline"}>
                                            Editor
                                            <Text color="#828282" fontSize="12px">Has access to all posts.</Text>
                                        </Radio>
                                        <Radio value='Contributor' borderColor={"pink"} size={"sm"} mb="3" colorScheme="pink" alignItems={"baseline"}>
                                            Contributor
                                            <Text color="#828282" fontSize="12px">Can write and edit their posts. They can’t publish them.</Text>
                                        </Radio>
                                    </Stack>
                                </RadioGroup>
                                <FormControl color="white" fontSize={"13px"} mt="4">
                                    <FormLabel color="whiteAlpha.700" fontSize={"13px"}>Custom message (optional)</FormLabel>
                                    <Textarea borderColor="whiteAlpha.400"></Textarea>
                                    <Text color="whiteAlpha.700" fontSize={"11px"} mt="2">0/400 characters </Text>
                                </FormControl>
                                <Button w="100%" mt="12" mb="6" borderRadius="full" fontSize={"13px"}>Send Invitation</Button>
                            </ModalBody>
                        </ModalContent>
                    </Modal>
                </main>
            </div>
        </EditorGuard>
    )
}

export default AdminPosts;